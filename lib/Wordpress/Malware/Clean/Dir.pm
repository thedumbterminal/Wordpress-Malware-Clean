package Wordpress::Malware::Clean::Dir;
use strict;
use warnings;
use Exception::Class("DirException");
use File::Spec;
use File::Path qw(make_path);
use Wordpress::Malware::Clean::File;
use base qw(Wordpress::Malware::Clean::File);
#######################################################################
sub new{
	my($class, $path, $parent) = @_;
	my $self = $class->SUPER::new($path, $parent);
	$self->{'__contents'} = []; 
	return $self;
}
#######################################################################
sub doProcess{	#create the new directory in the clean directory
	my $self = shift;
	my $clean = $self->__getCleanPath();
	if(!-d $clean){
		make_path($clean);
	}
	return 1;
}
#######################################################################
sub getChildDirectories{
	my $self = shift;
	my @contents = $self->__getContents();
	my @filtered;
	foreach my $item (@contents){
		my $class = ref($item);
		if($class =~ m/Dir$/){	#found a directory object
			push(@filtered, $item);
		}
	}
	return @filtered;
}
#######################################################################
sub getFiles{
	my $self = shift;
	my @contents = $self->__getContents();
	my @filtered;
	foreach my $item (@contents){
		my $class = ref($item);
		if($class =~ m/File$/){	#found a file object
			push(@filtered, $item);
		}
	}
	return @filtered;
}
#######################################################################
sub __getContents{
	my $self = shift;
	my @contents = @{$self->{'__contents'}};	
	if($#contents == -1){
		@contents = $self->__readContents();
		$self->__setContents(\@contents);
	}
	return @contents;
}
#######################################################################
sub __readContents{
	my $self = shift;
	my @found;
	if(opendir(DIR, $self->getPath())){
		my @contentsNames = readdir(DIR);
		closedir(DIR);
		foreach my $cName (@contentsNames){
			if($cName ne "." && $cName ne ".."){	#ignore these special dirs
				my $fullPath = File::Spec->catfile($self->getPath(), $cName);
				if(-d $fullPath){	#create dir object
					push(@found, ref($self)->new($fullPath, $self));
				}
				else{	#assume file
					push(@found, Wordpress::Malware::Clean::File->new($fullPath, $self));
				}
			}
		}
	}
	else{
		DirException->throw("Can't open directory: $@");
	}
	return @found;
}
#######################################################################
sub __setContents{
	my($self, $contents) = @_;
	$self->{'__contents'} = $contents;
	return 1;
}
#######################################################################
return 1;
